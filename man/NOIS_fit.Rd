% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NOIS.R
\name{NOIS_fit}
\alias{NOIS_fit}
\title{Fitting NOIS to data}
\usage{
NOIS_fit(data, x = "x", y = "y", CV_method = "LOOCV", first_h = NULL,
  pool_h = NULL, local_q = 0.1, pool_q = 0.1, tol = 1e-07,
  maxit = 200, ...)
}
\arguments{
\item{data}{A \code{data.frame}.}

\item{x}{The name of the column in \code{data} containing the 'x' values.}

\item{y}{The name of the column in \code{data} containing the 'y' values.}

\item{CV_method}{The type of cross-validation to use. Possible types are \code{c('MCV', 'LOOCV', 'PCV', 'none')}.}

\item{first_h}{Bandwidth for first model fit. Only used when \code{CV_method = 'none'}.
Default value is the theoretically optimal bandwidth of \eqn{n^{-1/5}}.}

\item{pool_h}{Bandwidth for pooled model fit. Only used when \code{CV_method = 'none'}.
Default value is the theoretically optimal bandwidth of \eqn{n^{-1/5}}.}

\item{local_q}{Fraction of points detected as outliers for each unpooled fit.}

\item{pool_q}{Pooled outlier detection. For numerics \eqn{\in (0, 1)},
this is the fraction of points detected as outliers.
For integers \eqn{\ge 1} this is the number of points detected as outliers.}

\item{tol}{Tolerance for each unpooled fit.}

\item{maxit}{Maximum number of iterations for each individual kernel smoothing fit.}

\item{...}{Additional arguments passed to the \code{CV_method}.}
}
\value{
An object of class '\code{NOIS_fit}' that is a list with the following components.
\item{\code{local_fit}}{Unpooled NOIS fits.}
\item{\code{pool_fit}}{Pooled NOIS fit.}
\item{\code{bias_pool_fit}}{Bias corrected pooled NOIS fit.}
\item{\code{first_fit}}{The first (non-robust) kernel smoothing fit.}
\item{\code{bias_first_fit}}{The first (non-robust) bias corrected kernel smoothing fit.}
\item{\code{local_gamma}}{The unpooled \eqn{\gamma} estimates.}
\item{\code{pool_gamma}}{The pooled \eqn{\gamma} estimate.}
\item{\code{pool_outlier}}{The positions of the pooled outlier estimates.}
\item{\code{local_q}}{Fraction of points detected as outliers for each unpooled fit.}
\item{\code{pool_q}}{Pooled outlier detection. For numerics \eqn{\in (0, 1)},
this is the fraction of points detected as outliers.
For integers \eqn{\ge 1} this is the number of points detected as outliers.}
\item{\code{pool_nonout}}{The positions of the clean observations.}
\item{\code{x}}{Original 'x' values.}
\item{\code{y_adj}}{Pooled adjusted 'y' values.}
\item{\code{y}}{Original 'x' values.}
\item{code{CV}}{A list with cross-validation information.}
\item{code{conv}}{A list with convergence information.}
}
\description{
Fit NOIS to data and return a \code{NOIS_fit} object
}
\examples{
###generate some random data and introduce outliers
set.seed(123)
npts <- 100
nout <- floor(.1*npts)
xt <- seq(from=0, to=2*pi, length.out=npts)
gaussnoise <- rnorm(npts)
outliers <- sample(floor(npts/2):npts, size=nout)
randpts <- runif(nout, min=5, max=7)
yt <- sin(xt) + gaussnoise
yt[outliers] <- yt[outliers] + randpts
sine_data <- data.frame(x = xt, y = yt)
###fit NOIS to this data
sine_fit <- NOIS_fit(sine_data, 'x', 'y', pool_q = .1, CV_method = 'LOOCV')
}
\seealso{
Other NOIS CV functions: \code{\link{LOOCV_grid}},
  \code{\link{MCV_grid}}, \code{\link{PCV_grid}}
}
